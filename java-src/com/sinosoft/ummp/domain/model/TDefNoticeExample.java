package com.sinosoft.ummp.domain.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class TDefNoticeExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table T_DEF_NOTICE
     *
     * @mbggenerated Fri Jul 01 17:33:58 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table T_DEF_NOTICE
     *
     * @mbggenerated Fri Jul 01 17:33:58 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table T_DEF_NOTICE
     *
     * @mbggenerated Fri Jul 01 17:33:58 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_DEF_NOTICE
     *
     * @mbggenerated Fri Jul 01 17:33:58 CST 2016
     */
    public TDefNoticeExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_DEF_NOTICE
     *
     * @mbggenerated Fri Jul 01 17:33:58 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_DEF_NOTICE
     *
     * @mbggenerated Fri Jul 01 17:33:58 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_DEF_NOTICE
     *
     * @mbggenerated Fri Jul 01 17:33:58 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_DEF_NOTICE
     *
     * @mbggenerated Fri Jul 01 17:33:58 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_DEF_NOTICE
     *
     * @mbggenerated Fri Jul 01 17:33:58 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_DEF_NOTICE
     *
     * @mbggenerated Fri Jul 01 17:33:58 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_DEF_NOTICE
     *
     * @mbggenerated Fri Jul 01 17:33:58 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_DEF_NOTICE
     *
     * @mbggenerated Fri Jul 01 17:33:58 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_DEF_NOTICE
     *
     * @mbggenerated Fri Jul 01 17:33:58 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_DEF_NOTICE
     *
     * @mbggenerated Fri Jul 01 17:33:58 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table T_DEF_NOTICE
     *
     * @mbggenerated Fri Jul 01 17:33:58 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andNoticeIdIsNull() {
            addCriterion("NOTICE_ID is null");
            return (Criteria) this;
        }

        public Criteria andNoticeIdIsNotNull() {
            addCriterion("NOTICE_ID is not null");
            return (Criteria) this;
        }

        public Criteria andNoticeIdEqualTo(BigDecimal value) {
            addCriterion("NOTICE_ID =", value, "noticeId");
            return (Criteria) this;
        }

        public Criteria andNoticeIdNotEqualTo(BigDecimal value) {
            addCriterion("NOTICE_ID <>", value, "noticeId");
            return (Criteria) this;
        }

        public Criteria andNoticeIdGreaterThan(BigDecimal value) {
            addCriterion("NOTICE_ID >", value, "noticeId");
            return (Criteria) this;
        }

        public Criteria andNoticeIdGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("NOTICE_ID >=", value, "noticeId");
            return (Criteria) this;
        }

        public Criteria andNoticeIdLessThan(BigDecimal value) {
            addCriterion("NOTICE_ID <", value, "noticeId");
            return (Criteria) this;
        }

        public Criteria andNoticeIdLessThanOrEqualTo(BigDecimal value) {
            addCriterion("NOTICE_ID <=", value, "noticeId");
            return (Criteria) this;
        }

        public Criteria andNoticeIdIn(List<BigDecimal> values) {
            addCriterion("NOTICE_ID in", values, "noticeId");
            return (Criteria) this;
        }

        public Criteria andNoticeIdNotIn(List<BigDecimal> values) {
            addCriterion("NOTICE_ID not in", values, "noticeId");
            return (Criteria) this;
        }

        public Criteria andNoticeIdBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("NOTICE_ID between", value1, value2, "noticeId");
            return (Criteria) this;
        }

        public Criteria andNoticeIdNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("NOTICE_ID not between", value1, value2, "noticeId");
            return (Criteria) this;
        }

        public Criteria andNoticeTypeIsNull() {
            addCriterion("NOTICE_TYPE is null");
            return (Criteria) this;
        }

        public Criteria andNoticeTypeIsNotNull() {
            addCriterion("NOTICE_TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andNoticeTypeEqualTo(String value) {
            addCriterion("NOTICE_TYPE =", value, "noticeType");
            return (Criteria) this;
        }

        public Criteria andNoticeTypeNotEqualTo(String value) {
            addCriterion("NOTICE_TYPE <>", value, "noticeType");
            return (Criteria) this;
        }

        public Criteria andNoticeTypeGreaterThan(String value) {
            addCriterion("NOTICE_TYPE >", value, "noticeType");
            return (Criteria) this;
        }

        public Criteria andNoticeTypeGreaterThanOrEqualTo(String value) {
            addCriterion("NOTICE_TYPE >=", value, "noticeType");
            return (Criteria) this;
        }

        public Criteria andNoticeTypeLessThan(String value) {
            addCriterion("NOTICE_TYPE <", value, "noticeType");
            return (Criteria) this;
        }

        public Criteria andNoticeTypeLessThanOrEqualTo(String value) {
            addCriterion("NOTICE_TYPE <=", value, "noticeType");
            return (Criteria) this;
        }

        public Criteria andNoticeTypeLike(String value) {
            addCriterion("NOTICE_TYPE like", value, "noticeType");
            return (Criteria) this;
        }

        public Criteria andNoticeTypeNotLike(String value) {
            addCriterion("NOTICE_TYPE not like", value, "noticeType");
            return (Criteria) this;
        }

        public Criteria andNoticeTypeIn(List<String> values) {
            addCriterion("NOTICE_TYPE in", values, "noticeType");
            return (Criteria) this;
        }

        public Criteria andNoticeTypeNotIn(List<String> values) {
            addCriterion("NOTICE_TYPE not in", values, "noticeType");
            return (Criteria) this;
        }

        public Criteria andNoticeTypeBetween(String value1, String value2) {
            addCriterion("NOTICE_TYPE between", value1, value2, "noticeType");
            return (Criteria) this;
        }

        public Criteria andNoticeTypeNotBetween(String value1, String value2) {
            addCriterion("NOTICE_TYPE not between", value1, value2, "noticeType");
            return (Criteria) this;
        }

        public Criteria andNoticeCodeIsNull() {
            addCriterion("NOTICE_CODE is null");
            return (Criteria) this;
        }

        public Criteria andNoticeCodeIsNotNull() {
            addCriterion("NOTICE_CODE is not null");
            return (Criteria) this;
        }

        public Criteria andNoticeCodeEqualTo(String value) {
            addCriterion("NOTICE_CODE =", value, "noticeCode");
            return (Criteria) this;
        }

        public Criteria andNoticeCodeNotEqualTo(String value) {
            addCriterion("NOTICE_CODE <>", value, "noticeCode");
            return (Criteria) this;
        }

        public Criteria andNoticeCodeGreaterThan(String value) {
            addCriterion("NOTICE_CODE >", value, "noticeCode");
            return (Criteria) this;
        }

        public Criteria andNoticeCodeGreaterThanOrEqualTo(String value) {
            addCriterion("NOTICE_CODE >=", value, "noticeCode");
            return (Criteria) this;
        }

        public Criteria andNoticeCodeLessThan(String value) {
            addCriterion("NOTICE_CODE <", value, "noticeCode");
            return (Criteria) this;
        }

        public Criteria andNoticeCodeLessThanOrEqualTo(String value) {
            addCriterion("NOTICE_CODE <=", value, "noticeCode");
            return (Criteria) this;
        }

        public Criteria andNoticeCodeLike(String value) {
            addCriterion("NOTICE_CODE like", value, "noticeCode");
            return (Criteria) this;
        }

        public Criteria andNoticeCodeNotLike(String value) {
            addCriterion("NOTICE_CODE not like", value, "noticeCode");
            return (Criteria) this;
        }

        public Criteria andNoticeCodeIn(List<String> values) {
            addCriterion("NOTICE_CODE in", values, "noticeCode");
            return (Criteria) this;
        }

        public Criteria andNoticeCodeNotIn(List<String> values) {
            addCriterion("NOTICE_CODE not in", values, "noticeCode");
            return (Criteria) this;
        }

        public Criteria andNoticeCodeBetween(String value1, String value2) {
            addCriterion("NOTICE_CODE between", value1, value2, "noticeCode");
            return (Criteria) this;
        }

        public Criteria andNoticeCodeNotBetween(String value1, String value2) {
            addCriterion("NOTICE_CODE not between", value1, value2, "noticeCode");
            return (Criteria) this;
        }

        public Criteria andNoticeNameIsNull() {
            addCriterion("NOTICE_NAME is null");
            return (Criteria) this;
        }

        public Criteria andNoticeNameIsNotNull() {
            addCriterion("NOTICE_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andNoticeNameEqualTo(String value) {
            addCriterion("NOTICE_NAME =", value, "noticeName");
            return (Criteria) this;
        }

        public Criteria andNoticeNameNotEqualTo(String value) {
            addCriterion("NOTICE_NAME <>", value, "noticeName");
            return (Criteria) this;
        }

        public Criteria andNoticeNameGreaterThan(String value) {
            addCriterion("NOTICE_NAME >", value, "noticeName");
            return (Criteria) this;
        }

        public Criteria andNoticeNameGreaterThanOrEqualTo(String value) {
            addCriterion("NOTICE_NAME >=", value, "noticeName");
            return (Criteria) this;
        }

        public Criteria andNoticeNameLessThan(String value) {
            addCriterion("NOTICE_NAME <", value, "noticeName");
            return (Criteria) this;
        }

        public Criteria andNoticeNameLessThanOrEqualTo(String value) {
            addCriterion("NOTICE_NAME <=", value, "noticeName");
            return (Criteria) this;
        }

        public Criteria andNoticeNameLike(String value) {
            addCriterion("NOTICE_NAME like", value, "noticeName");
            return (Criteria) this;
        }

        public Criteria andNoticeNameNotLike(String value) {
            addCriterion("NOTICE_NAME not like", value, "noticeName");
            return (Criteria) this;
        }

        public Criteria andNoticeNameIn(List<String> values) {
            addCriterion("NOTICE_NAME in", values, "noticeName");
            return (Criteria) this;
        }

        public Criteria andNoticeNameNotIn(List<String> values) {
            addCriterion("NOTICE_NAME not in", values, "noticeName");
            return (Criteria) this;
        }

        public Criteria andNoticeNameBetween(String value1, String value2) {
            addCriterion("NOTICE_NAME between", value1, value2, "noticeName");
            return (Criteria) this;
        }

        public Criteria andNoticeNameNotBetween(String value1, String value2) {
            addCriterion("NOTICE_NAME not between", value1, value2, "noticeName");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table T_DEF_NOTICE
     *
     * @mbggenerated do_not_delete_during_merge Fri Jul 01 17:33:58 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table T_DEF_NOTICE
     *
     * @mbggenerated Fri Jul 01 17:33:58 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}