package com.sinosoft.ummp.domain.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class TDefMsgNodeExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table T_DEF_MSG_NODE
	 * @mbggenerated  Thu Jul 21 17:09:37 CST 2016
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table T_DEF_MSG_NODE
	 * @mbggenerated  Thu Jul 21 17:09:37 CST 2016
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table T_DEF_MSG_NODE
	 * @mbggenerated  Thu Jul 21 17:09:37 CST 2016
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table T_DEF_MSG_NODE
	 * @mbggenerated  Thu Jul 21 17:09:37 CST 2016
	 */
	public TDefMsgNodeExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table T_DEF_MSG_NODE
	 * @mbggenerated  Thu Jul 21 17:09:37 CST 2016
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table T_DEF_MSG_NODE
	 * @mbggenerated  Thu Jul 21 17:09:37 CST 2016
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table T_DEF_MSG_NODE
	 * @mbggenerated  Thu Jul 21 17:09:37 CST 2016
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table T_DEF_MSG_NODE
	 * @mbggenerated  Thu Jul 21 17:09:37 CST 2016
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table T_DEF_MSG_NODE
	 * @mbggenerated  Thu Jul 21 17:09:37 CST 2016
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table T_DEF_MSG_NODE
	 * @mbggenerated  Thu Jul 21 17:09:37 CST 2016
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table T_DEF_MSG_NODE
	 * @mbggenerated  Thu Jul 21 17:09:37 CST 2016
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table T_DEF_MSG_NODE
	 * @mbggenerated  Thu Jul 21 17:09:37 CST 2016
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table T_DEF_MSG_NODE
	 * @mbggenerated  Thu Jul 21 17:09:37 CST 2016
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table T_DEF_MSG_NODE
	 * @mbggenerated  Thu Jul 21 17:09:37 CST 2016
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table T_DEF_MSG_NODE
	 * @mbggenerated  Thu Jul 21 17:09:37 CST 2016
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andNodeIdIsNull() {
			addCriterion("NODE_ID is null");
			return (Criteria) this;
		}

		public Criteria andNodeIdIsNotNull() {
			addCriterion("NODE_ID is not null");
			return (Criteria) this;
		}

		public Criteria andNodeIdEqualTo(BigDecimal value) {
			addCriterion("NODE_ID =", value, "nodeId");
			return (Criteria) this;
		}

		public Criteria andNodeIdNotEqualTo(BigDecimal value) {
			addCriterion("NODE_ID <>", value, "nodeId");
			return (Criteria) this;
		}

		public Criteria andNodeIdGreaterThan(BigDecimal value) {
			addCriterion("NODE_ID >", value, "nodeId");
			return (Criteria) this;
		}

		public Criteria andNodeIdGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("NODE_ID >=", value, "nodeId");
			return (Criteria) this;
		}

		public Criteria andNodeIdLessThan(BigDecimal value) {
			addCriterion("NODE_ID <", value, "nodeId");
			return (Criteria) this;
		}

		public Criteria andNodeIdLessThanOrEqualTo(BigDecimal value) {
			addCriterion("NODE_ID <=", value, "nodeId");
			return (Criteria) this;
		}

		public Criteria andNodeIdIn(List<BigDecimal> values) {
			addCriterion("NODE_ID in", values, "nodeId");
			return (Criteria) this;
		}

		public Criteria andNodeIdNotIn(List<BigDecimal> values) {
			addCriterion("NODE_ID not in", values, "nodeId");
			return (Criteria) this;
		}

		public Criteria andNodeIdBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("NODE_ID between", value1, value2, "nodeId");
			return (Criteria) this;
		}

		public Criteria andNodeIdNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("NODE_ID not between", value1, value2, "nodeId");
			return (Criteria) this;
		}

		public Criteria andNodePidIsNull() {
			addCriterion("NODE_PID is null");
			return (Criteria) this;
		}

		public Criteria andNodePidIsNotNull() {
			addCriterion("NODE_PID is not null");
			return (Criteria) this;
		}

		public Criteria andNodePidEqualTo(BigDecimal value) {
			addCriterion("NODE_PID =", value, "nodePid");
			return (Criteria) this;
		}

		public Criteria andNodePidNotEqualTo(BigDecimal value) {
			addCriterion("NODE_PID <>", value, "nodePid");
			return (Criteria) this;
		}

		public Criteria andNodePidGreaterThan(BigDecimal value) {
			addCriterion("NODE_PID >", value, "nodePid");
			return (Criteria) this;
		}

		public Criteria andNodePidGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("NODE_PID >=", value, "nodePid");
			return (Criteria) this;
		}

		public Criteria andNodePidLessThan(BigDecimal value) {
			addCriterion("NODE_PID <", value, "nodePid");
			return (Criteria) this;
		}

		public Criteria andNodePidLessThanOrEqualTo(BigDecimal value) {
			addCriterion("NODE_PID <=", value, "nodePid");
			return (Criteria) this;
		}

		public Criteria andNodePidIn(List<BigDecimal> values) {
			addCriterion("NODE_PID in", values, "nodePid");
			return (Criteria) this;
		}

		public Criteria andNodePidNotIn(List<BigDecimal> values) {
			addCriterion("NODE_PID not in", values, "nodePid");
			return (Criteria) this;
		}

		public Criteria andNodePidBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("NODE_PID between", value1, value2, "nodePid");
			return (Criteria) this;
		}

		public Criteria andNodePidNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("NODE_PID not between", value1, value2, "nodePid");
			return (Criteria) this;
		}

		public Criteria andNodeCodeIsNull() {
			addCriterion("NODE_CODE is null");
			return (Criteria) this;
		}

		public Criteria andNodeCodeIsNotNull() {
			addCriterion("NODE_CODE is not null");
			return (Criteria) this;
		}

		public Criteria andNodeCodeEqualTo(String value) {
			addCriterion("NODE_CODE =", value, "nodeCode");
			return (Criteria) this;
		}

		public Criteria andNodeCodeNotEqualTo(String value) {
			addCriterion("NODE_CODE <>", value, "nodeCode");
			return (Criteria) this;
		}

		public Criteria andNodeCodeGreaterThan(String value) {
			addCriterion("NODE_CODE >", value, "nodeCode");
			return (Criteria) this;
		}

		public Criteria andNodeCodeGreaterThanOrEqualTo(String value) {
			addCriterion("NODE_CODE >=", value, "nodeCode");
			return (Criteria) this;
		}

		public Criteria andNodeCodeLessThan(String value) {
			addCriterion("NODE_CODE <", value, "nodeCode");
			return (Criteria) this;
		}

		public Criteria andNodeCodeLessThanOrEqualTo(String value) {
			addCriterion("NODE_CODE <=", value, "nodeCode");
			return (Criteria) this;
		}

		public Criteria andNodeCodeLike(String value) {
			addCriterion("NODE_CODE like", value, "nodeCode");
			return (Criteria) this;
		}

		public Criteria andNodeCodeNotLike(String value) {
			addCriterion("NODE_CODE not like", value, "nodeCode");
			return (Criteria) this;
		}

		public Criteria andNodeCodeIn(List<String> values) {
			addCriterion("NODE_CODE in", values, "nodeCode");
			return (Criteria) this;
		}

		public Criteria andNodeCodeNotIn(List<String> values) {
			addCriterion("NODE_CODE not in", values, "nodeCode");
			return (Criteria) this;
		}

		public Criteria andNodeCodeBetween(String value1, String value2) {
			addCriterion("NODE_CODE between", value1, value2, "nodeCode");
			return (Criteria) this;
		}

		public Criteria andNodeCodeNotBetween(String value1, String value2) {
			addCriterion("NODE_CODE not between", value1, value2, "nodeCode");
			return (Criteria) this;
		}

		public Criteria andNodeNameIsNull() {
			addCriterion("NODE_NAME is null");
			return (Criteria) this;
		}

		public Criteria andNodeNameIsNotNull() {
			addCriterion("NODE_NAME is not null");
			return (Criteria) this;
		}

		public Criteria andNodeNameEqualTo(String value) {
			addCriterion("NODE_NAME =", value, "nodeName");
			return (Criteria) this;
		}

		public Criteria andNodeNameNotEqualTo(String value) {
			addCriterion("NODE_NAME <>", value, "nodeName");
			return (Criteria) this;
		}

		public Criteria andNodeNameGreaterThan(String value) {
			addCriterion("NODE_NAME >", value, "nodeName");
			return (Criteria) this;
		}

		public Criteria andNodeNameGreaterThanOrEqualTo(String value) {
			addCriterion("NODE_NAME >=", value, "nodeName");
			return (Criteria) this;
		}

		public Criteria andNodeNameLessThan(String value) {
			addCriterion("NODE_NAME <", value, "nodeName");
			return (Criteria) this;
		}

		public Criteria andNodeNameLessThanOrEqualTo(String value) {
			addCriterion("NODE_NAME <=", value, "nodeName");
			return (Criteria) this;
		}

		public Criteria andNodeNameLike(String value) {
			addCriterion("NODE_NAME like", value, "nodeName");
			return (Criteria) this;
		}

		public Criteria andNodeNameNotLike(String value) {
			addCriterion("NODE_NAME not like", value, "nodeName");
			return (Criteria) this;
		}

		public Criteria andNodeNameIn(List<String> values) {
			addCriterion("NODE_NAME in", values, "nodeName");
			return (Criteria) this;
		}

		public Criteria andNodeNameNotIn(List<String> values) {
			addCriterion("NODE_NAME not in", values, "nodeName");
			return (Criteria) this;
		}

		public Criteria andNodeNameBetween(String value1, String value2) {
			addCriterion("NODE_NAME between", value1, value2, "nodeName");
			return (Criteria) this;
		}

		public Criteria andNodeNameNotBetween(String value1, String value2) {
			addCriterion("NODE_NAME not between", value1, value2, "nodeName");
			return (Criteria) this;
		}

		public Criteria andNodeTextIsNull() {
			addCriterion("NODE_TEXT is null");
			return (Criteria) this;
		}

		public Criteria andNodeTextIsNotNull() {
			addCriterion("NODE_TEXT is not null");
			return (Criteria) this;
		}

		public Criteria andNodeTextEqualTo(String value) {
			addCriterion("NODE_TEXT =", value, "nodeText");
			return (Criteria) this;
		}

		public Criteria andNodeTextNotEqualTo(String value) {
			addCriterion("NODE_TEXT <>", value, "nodeText");
			return (Criteria) this;
		}

		public Criteria andNodeTextGreaterThan(String value) {
			addCriterion("NODE_TEXT >", value, "nodeText");
			return (Criteria) this;
		}

		public Criteria andNodeTextGreaterThanOrEqualTo(String value) {
			addCriterion("NODE_TEXT >=", value, "nodeText");
			return (Criteria) this;
		}

		public Criteria andNodeTextLessThan(String value) {
			addCriterion("NODE_TEXT <", value, "nodeText");
			return (Criteria) this;
		}

		public Criteria andNodeTextLessThanOrEqualTo(String value) {
			addCriterion("NODE_TEXT <=", value, "nodeText");
			return (Criteria) this;
		}

		public Criteria andNodeTextLike(String value) {
			addCriterion("NODE_TEXT like", value, "nodeText");
			return (Criteria) this;
		}

		public Criteria andNodeTextNotLike(String value) {
			addCriterion("NODE_TEXT not like", value, "nodeText");
			return (Criteria) this;
		}

		public Criteria andNodeTextIn(List<String> values) {
			addCriterion("NODE_TEXT in", values, "nodeText");
			return (Criteria) this;
		}

		public Criteria andNodeTextNotIn(List<String> values) {
			addCriterion("NODE_TEXT not in", values, "nodeText");
			return (Criteria) this;
		}

		public Criteria andNodeTextBetween(String value1, String value2) {
			addCriterion("NODE_TEXT between", value1, value2, "nodeText");
			return (Criteria) this;
		}

		public Criteria andNodeTextNotBetween(String value1, String value2) {
			addCriterion("NODE_TEXT not between", value1, value2, "nodeText");
			return (Criteria) this;
		}

		public Criteria andNodeNumIsNull() {
			addCriterion("NODE_NUM is null");
			return (Criteria) this;
		}

		public Criteria andNodeNumIsNotNull() {
			addCriterion("NODE_NUM is not null");
			return (Criteria) this;
		}

		public Criteria andNodeNumEqualTo(Long value) {
			addCriterion("NODE_NUM =", value, "nodeNum");
			return (Criteria) this;
		}

		public Criteria andNodeNumNotEqualTo(Long value) {
			addCriterion("NODE_NUM <>", value, "nodeNum");
			return (Criteria) this;
		}

		public Criteria andNodeNumGreaterThan(Long value) {
			addCriterion("NODE_NUM >", value, "nodeNum");
			return (Criteria) this;
		}

		public Criteria andNodeNumGreaterThanOrEqualTo(Long value) {
			addCriterion("NODE_NUM >=", value, "nodeNum");
			return (Criteria) this;
		}

		public Criteria andNodeNumLessThan(Long value) {
			addCriterion("NODE_NUM <", value, "nodeNum");
			return (Criteria) this;
		}

		public Criteria andNodeNumLessThanOrEqualTo(Long value) {
			addCriterion("NODE_NUM <=", value, "nodeNum");
			return (Criteria) this;
		}

		public Criteria andNodeNumIn(List<Long> values) {
			addCriterion("NODE_NUM in", values, "nodeNum");
			return (Criteria) this;
		}

		public Criteria andNodeNumNotIn(List<Long> values) {
			addCriterion("NODE_NUM not in", values, "nodeNum");
			return (Criteria) this;
		}

		public Criteria andNodeNumBetween(Long value1, Long value2) {
			addCriterion("NODE_NUM between", value1, value2, "nodeNum");
			return (Criteria) this;
		}

		public Criteria andNodeNumNotBetween(Long value1, Long value2) {
			addCriterion("NODE_NUM not between", value1, value2, "nodeNum");
			return (Criteria) this;
		}

		public Criteria andRcStatusIsNull() {
			addCriterion("RC_STATUS is null");
			return (Criteria) this;
		}

		public Criteria andRcStatusIsNotNull() {
			addCriterion("RC_STATUS is not null");
			return (Criteria) this;
		}

		public Criteria andRcStatusEqualTo(Short value) {
			addCriterion("RC_STATUS =", value, "rcStatus");
			return (Criteria) this;
		}

		public Criteria andRcStatusNotEqualTo(Short value) {
			addCriterion("RC_STATUS <>", value, "rcStatus");
			return (Criteria) this;
		}

		public Criteria andRcStatusGreaterThan(Short value) {
			addCriterion("RC_STATUS >", value, "rcStatus");
			return (Criteria) this;
		}

		public Criteria andRcStatusGreaterThanOrEqualTo(Short value) {
			addCriterion("RC_STATUS >=", value, "rcStatus");
			return (Criteria) this;
		}

		public Criteria andRcStatusLessThan(Short value) {
			addCriterion("RC_STATUS <", value, "rcStatus");
			return (Criteria) this;
		}

		public Criteria andRcStatusLessThanOrEqualTo(Short value) {
			addCriterion("RC_STATUS <=", value, "rcStatus");
			return (Criteria) this;
		}

		public Criteria andRcStatusIn(List<Short> values) {
			addCriterion("RC_STATUS in", values, "rcStatus");
			return (Criteria) this;
		}

		public Criteria andRcStatusNotIn(List<Short> values) {
			addCriterion("RC_STATUS not in", values, "rcStatus");
			return (Criteria) this;
		}

		public Criteria andRcStatusBetween(Short value1, Short value2) {
			addCriterion("RC_STATUS between", value1, value2, "rcStatus");
			return (Criteria) this;
		}

		public Criteria andRcStatusNotBetween(Short value1, Short value2) {
			addCriterion("RC_STATUS not between", value1, value2, "rcStatus");
			return (Criteria) this;
		}

		public Criteria andSonNodeTypeIsNull() {
			addCriterion("SON_NODE_TYPE is null");
			return (Criteria) this;
		}

		public Criteria andSonNodeTypeIsNotNull() {
			addCriterion("SON_NODE_TYPE is not null");
			return (Criteria) this;
		}

		public Criteria andSonNodeTypeEqualTo(Short value) {
			addCriterion("SON_NODE_TYPE =", value, "sonNodeType");
			return (Criteria) this;
		}

		public Criteria andSonNodeTypeNotEqualTo(Short value) {
			addCriterion("SON_NODE_TYPE <>", value, "sonNodeType");
			return (Criteria) this;
		}

		public Criteria andSonNodeTypeGreaterThan(Short value) {
			addCriterion("SON_NODE_TYPE >", value, "sonNodeType");
			return (Criteria) this;
		}

		public Criteria andSonNodeTypeGreaterThanOrEqualTo(Short value) {
			addCriterion("SON_NODE_TYPE >=", value, "sonNodeType");
			return (Criteria) this;
		}

		public Criteria andSonNodeTypeLessThan(Short value) {
			addCriterion("SON_NODE_TYPE <", value, "sonNodeType");
			return (Criteria) this;
		}

		public Criteria andSonNodeTypeLessThanOrEqualTo(Short value) {
			addCriterion("SON_NODE_TYPE <=", value, "sonNodeType");
			return (Criteria) this;
		}

		public Criteria andSonNodeTypeIn(List<Short> values) {
			addCriterion("SON_NODE_TYPE in", values, "sonNodeType");
			return (Criteria) this;
		}

		public Criteria andSonNodeTypeNotIn(List<Short> values) {
			addCriterion("SON_NODE_TYPE not in", values, "sonNodeType");
			return (Criteria) this;
		}

		public Criteria andSonNodeTypeBetween(Short value1, Short value2) {
			addCriterion("SON_NODE_TYPE between", value1, value2, "sonNodeType");
			return (Criteria) this;
		}

		public Criteria andSonNodeTypeNotBetween(Short value1, Short value2) {
			addCriterion("SON_NODE_TYPE not between", value1, value2,
					"sonNodeType");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table T_DEF_MSG_NODE
	 * @mbggenerated  Thu Jul 21 17:09:37 CST 2016
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table T_DEF_MSG_NODE
     *
     * @mbggenerated do_not_delete_during_merge Wed Jun 15 16:31:06 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}