package com.sinosoft.platform.core.domain.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class TDefUserTraceExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table T_DEF_USER_TRACE
     *
     * @mbggenerated Wed May 25 13:53:35 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table T_DEF_USER_TRACE
     *
     * @mbggenerated Wed May 25 13:53:35 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table T_DEF_USER_TRACE
     *
     * @mbggenerated Wed May 25 13:53:35 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_DEF_USER_TRACE
     *
     * @mbggenerated Wed May 25 13:53:35 CST 2016
     */
    public TDefUserTraceExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_DEF_USER_TRACE
     *
     * @mbggenerated Wed May 25 13:53:35 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_DEF_USER_TRACE
     *
     * @mbggenerated Wed May 25 13:53:35 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_DEF_USER_TRACE
     *
     * @mbggenerated Wed May 25 13:53:35 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_DEF_USER_TRACE
     *
     * @mbggenerated Wed May 25 13:53:35 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_DEF_USER_TRACE
     *
     * @mbggenerated Wed May 25 13:53:35 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_DEF_USER_TRACE
     *
     * @mbggenerated Wed May 25 13:53:35 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_DEF_USER_TRACE
     *
     * @mbggenerated Wed May 25 13:53:35 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_DEF_USER_TRACE
     *
     * @mbggenerated Wed May 25 13:53:35 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_DEF_USER_TRACE
     *
     * @mbggenerated Wed May 25 13:53:35 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_DEF_USER_TRACE
     *
     * @mbggenerated Wed May 25 13:53:35 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table T_DEF_USER_TRACE
     *
     * @mbggenerated Wed May 25 13:53:35 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(BigDecimal value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(BigDecimal value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(BigDecimal value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(BigDecimal value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(BigDecimal value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<BigDecimal> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<BigDecimal> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("USER_ID is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("USER_ID is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(BigDecimal value) {
            addCriterion("USER_ID =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(BigDecimal value) {
            addCriterion("USER_ID <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(BigDecimal value) {
            addCriterion("USER_ID >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("USER_ID >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(BigDecimal value) {
            addCriterion("USER_ID <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(BigDecimal value) {
            addCriterion("USER_ID <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<BigDecimal> values) {
            addCriterion("USER_ID in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<BigDecimal> values) {
            addCriterion("USER_ID not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("USER_ID between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("USER_ID not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIpIsNull() {
            addCriterion("USER_IP is null");
            return (Criteria) this;
        }

        public Criteria andUserIpIsNotNull() {
            addCriterion("USER_IP is not null");
            return (Criteria) this;
        }

        public Criteria andUserIpEqualTo(String value) {
            addCriterion("USER_IP =", value, "userIp");
            return (Criteria) this;
        }

        public Criteria andUserIpNotEqualTo(String value) {
            addCriterion("USER_IP <>", value, "userIp");
            return (Criteria) this;
        }

        public Criteria andUserIpGreaterThan(String value) {
            addCriterion("USER_IP >", value, "userIp");
            return (Criteria) this;
        }

        public Criteria andUserIpGreaterThanOrEqualTo(String value) {
            addCriterion("USER_IP >=", value, "userIp");
            return (Criteria) this;
        }

        public Criteria andUserIpLessThan(String value) {
            addCriterion("USER_IP <", value, "userIp");
            return (Criteria) this;
        }

        public Criteria andUserIpLessThanOrEqualTo(String value) {
            addCriterion("USER_IP <=", value, "userIp");
            return (Criteria) this;
        }

        public Criteria andUserIpLike(String value) {
            addCriterion("USER_IP like", value, "userIp");
            return (Criteria) this;
        }

        public Criteria andUserIpNotLike(String value) {
            addCriterion("USER_IP not like", value, "userIp");
            return (Criteria) this;
        }

        public Criteria andUserIpIn(List<String> values) {
            addCriterion("USER_IP in", values, "userIp");
            return (Criteria) this;
        }

        public Criteria andUserIpNotIn(List<String> values) {
            addCriterion("USER_IP not in", values, "userIp");
            return (Criteria) this;
        }

        public Criteria andUserIpBetween(String value1, String value2) {
            addCriterion("USER_IP between", value1, value2, "userIp");
            return (Criteria) this;
        }

        public Criteria andUserIpNotBetween(String value1, String value2) {
            addCriterion("USER_IP not between", value1, value2, "userIp");
            return (Criteria) this;
        }

        public Criteria andPrivilegeIdIsNull() {
            addCriterion("PRIVILEGE_ID is null");
            return (Criteria) this;
        }

        public Criteria andPrivilegeIdIsNotNull() {
            addCriterion("PRIVILEGE_ID is not null");
            return (Criteria) this;
        }

        public Criteria andPrivilegeIdEqualTo(BigDecimal value) {
            addCriterion("PRIVILEGE_ID =", value, "privilegeId");
            return (Criteria) this;
        }

        public Criteria andPrivilegeIdNotEqualTo(BigDecimal value) {
            addCriterion("PRIVILEGE_ID <>", value, "privilegeId");
            return (Criteria) this;
        }

        public Criteria andPrivilegeIdGreaterThan(BigDecimal value) {
            addCriterion("PRIVILEGE_ID >", value, "privilegeId");
            return (Criteria) this;
        }

        public Criteria andPrivilegeIdGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("PRIVILEGE_ID >=", value, "privilegeId");
            return (Criteria) this;
        }

        public Criteria andPrivilegeIdLessThan(BigDecimal value) {
            addCriterion("PRIVILEGE_ID <", value, "privilegeId");
            return (Criteria) this;
        }

        public Criteria andPrivilegeIdLessThanOrEqualTo(BigDecimal value) {
            addCriterion("PRIVILEGE_ID <=", value, "privilegeId");
            return (Criteria) this;
        }

        public Criteria andPrivilegeIdIn(List<BigDecimal> values) {
            addCriterion("PRIVILEGE_ID in", values, "privilegeId");
            return (Criteria) this;
        }

        public Criteria andPrivilegeIdNotIn(List<BigDecimal> values) {
            addCriterion("PRIVILEGE_ID not in", values, "privilegeId");
            return (Criteria) this;
        }

        public Criteria andPrivilegeIdBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PRIVILEGE_ID between", value1, value2, "privilegeId");
            return (Criteria) this;
        }

        public Criteria andPrivilegeIdNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PRIVILEGE_ID not between", value1, value2, "privilegeId");
            return (Criteria) this;
        }

        public Criteria andInsertTimeIsNull() {
            addCriterion("INSERT_TIME is null");
            return (Criteria) this;
        }

        public Criteria andInsertTimeIsNotNull() {
            addCriterion("INSERT_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andInsertTimeEqualTo(Date value) {
            addCriterionForJDBCDate("INSERT_TIME =", value, "insertTime");
            return (Criteria) this;
        }

        public Criteria andInsertTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("INSERT_TIME <>", value, "insertTime");
            return (Criteria) this;
        }

        public Criteria andInsertTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("INSERT_TIME >", value, "insertTime");
            return (Criteria) this;
        }

        public Criteria andInsertTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("INSERT_TIME >=", value, "insertTime");
            return (Criteria) this;
        }

        public Criteria andInsertTimeLessThan(Date value) {
            addCriterionForJDBCDate("INSERT_TIME <", value, "insertTime");
            return (Criteria) this;
        }

        public Criteria andInsertTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("INSERT_TIME <=", value, "insertTime");
            return (Criteria) this;
        }

        public Criteria andInsertTimeIn(List<Date> values) {
            addCriterionForJDBCDate("INSERT_TIME in", values, "insertTime");
            return (Criteria) this;
        }

        public Criteria andInsertTimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("INSERT_TIME not in", values, "insertTime");
            return (Criteria) this;
        }

        public Criteria andInsertTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("INSERT_TIME between", value1, value2, "insertTime");
            return (Criteria) this;
        }

        public Criteria andInsertTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("INSERT_TIME not between", value1, value2, "insertTime");
            return (Criteria) this;
        }

        public Criteria andTraceUrlIsNull() {
            addCriterion("TRACE_URL is null");
            return (Criteria) this;
        }

        public Criteria andTraceUrlIsNotNull() {
            addCriterion("TRACE_URL is not null");
            return (Criteria) this;
        }

        public Criteria andTraceUrlEqualTo(String value) {
            addCriterion("TRACE_URL =", value, "traceUrl");
            return (Criteria) this;
        }

        public Criteria andTraceUrlNotEqualTo(String value) {
            addCriterion("TRACE_URL <>", value, "traceUrl");
            return (Criteria) this;
        }

        public Criteria andTraceUrlGreaterThan(String value) {
            addCriterion("TRACE_URL >", value, "traceUrl");
            return (Criteria) this;
        }

        public Criteria andTraceUrlGreaterThanOrEqualTo(String value) {
            addCriterion("TRACE_URL >=", value, "traceUrl");
            return (Criteria) this;
        }

        public Criteria andTraceUrlLessThan(String value) {
            addCriterion("TRACE_URL <", value, "traceUrl");
            return (Criteria) this;
        }

        public Criteria andTraceUrlLessThanOrEqualTo(String value) {
            addCriterion("TRACE_URL <=", value, "traceUrl");
            return (Criteria) this;
        }

        public Criteria andTraceUrlLike(String value) {
            addCriterion("TRACE_URL like", value, "traceUrl");
            return (Criteria) this;
        }

        public Criteria andTraceUrlNotLike(String value) {
            addCriterion("TRACE_URL not like", value, "traceUrl");
            return (Criteria) this;
        }

        public Criteria andTraceUrlIn(List<String> values) {
            addCriterion("TRACE_URL in", values, "traceUrl");
            return (Criteria) this;
        }

        public Criteria andTraceUrlNotIn(List<String> values) {
            addCriterion("TRACE_URL not in", values, "traceUrl");
            return (Criteria) this;
        }

        public Criteria andTraceUrlBetween(String value1, String value2) {
            addCriterion("TRACE_URL between", value1, value2, "traceUrl");
            return (Criteria) this;
        }

        public Criteria andTraceUrlNotBetween(String value1, String value2) {
            addCriterion("TRACE_URL not between", value1, value2, "traceUrl");
            return (Criteria) this;
        }

        public Criteria andTraceFuncIsNull() {
            addCriterion("TRACE__FUNC is null");
            return (Criteria) this;
        }

        public Criteria andTraceFuncIsNotNull() {
            addCriterion("TRACE__FUNC is not null");
            return (Criteria) this;
        }

        public Criteria andTraceFuncEqualTo(String value) {
            addCriterion("TRACE__FUNC =", value, "traceFunc");
            return (Criteria) this;
        }

        public Criteria andTraceFuncNotEqualTo(String value) {
            addCriterion("TRACE__FUNC <>", value, "traceFunc");
            return (Criteria) this;
        }

        public Criteria andTraceFuncGreaterThan(String value) {
            addCriterion("TRACE__FUNC >", value, "traceFunc");
            return (Criteria) this;
        }

        public Criteria andTraceFuncGreaterThanOrEqualTo(String value) {
            addCriterion("TRACE__FUNC >=", value, "traceFunc");
            return (Criteria) this;
        }

        public Criteria andTraceFuncLessThan(String value) {
            addCriterion("TRACE__FUNC <", value, "traceFunc");
            return (Criteria) this;
        }

        public Criteria andTraceFuncLessThanOrEqualTo(String value) {
            addCriterion("TRACE__FUNC <=", value, "traceFunc");
            return (Criteria) this;
        }

        public Criteria andTraceFuncLike(String value) {
            addCriterion("TRACE__FUNC like", value, "traceFunc");
            return (Criteria) this;
        }

        public Criteria andTraceFuncNotLike(String value) {
            addCriterion("TRACE__FUNC not like", value, "traceFunc");
            return (Criteria) this;
        }

        public Criteria andTraceFuncIn(List<String> values) {
            addCriterion("TRACE__FUNC in", values, "traceFunc");
            return (Criteria) this;
        }

        public Criteria andTraceFuncNotIn(List<String> values) {
            addCriterion("TRACE__FUNC not in", values, "traceFunc");
            return (Criteria) this;
        }

        public Criteria andTraceFuncBetween(String value1, String value2) {
            addCriterion("TRACE__FUNC between", value1, value2, "traceFunc");
            return (Criteria) this;
        }

        public Criteria andTraceFuncNotBetween(String value1, String value2) {
            addCriterion("TRACE__FUNC not between", value1, value2, "traceFunc");
            return (Criteria) this;
        }

        public Criteria andTraceMsgIsNull() {
            addCriterion("TRACE__MSG is null");
            return (Criteria) this;
        }

        public Criteria andTraceMsgIsNotNull() {
            addCriterion("TRACE__MSG is not null");
            return (Criteria) this;
        }

        public Criteria andTraceMsgEqualTo(String value) {
            addCriterion("TRACE__MSG =", value, "traceMsg");
            return (Criteria) this;
        }

        public Criteria andTraceMsgNotEqualTo(String value) {
            addCriterion("TRACE__MSG <>", value, "traceMsg");
            return (Criteria) this;
        }

        public Criteria andTraceMsgGreaterThan(String value) {
            addCriterion("TRACE__MSG >", value, "traceMsg");
            return (Criteria) this;
        }

        public Criteria andTraceMsgGreaterThanOrEqualTo(String value) {
            addCriterion("TRACE__MSG >=", value, "traceMsg");
            return (Criteria) this;
        }

        public Criteria andTraceMsgLessThan(String value) {
            addCriterion("TRACE__MSG <", value, "traceMsg");
            return (Criteria) this;
        }

        public Criteria andTraceMsgLessThanOrEqualTo(String value) {
            addCriterion("TRACE__MSG <=", value, "traceMsg");
            return (Criteria) this;
        }

        public Criteria andTraceMsgLike(String value) {
            addCriterion("TRACE__MSG like", value, "traceMsg");
            return (Criteria) this;
        }

        public Criteria andTraceMsgNotLike(String value) {
            addCriterion("TRACE__MSG not like", value, "traceMsg");
            return (Criteria) this;
        }

        public Criteria andTraceMsgIn(List<String> values) {
            addCriterion("TRACE__MSG in", values, "traceMsg");
            return (Criteria) this;
        }

        public Criteria andTraceMsgNotIn(List<String> values) {
            addCriterion("TRACE__MSG not in", values, "traceMsg");
            return (Criteria) this;
        }

        public Criteria andTraceMsgBetween(String value1, String value2) {
            addCriterion("TRACE__MSG between", value1, value2, "traceMsg");
            return (Criteria) this;
        }

        public Criteria andTraceMsgNotBetween(String value1, String value2) {
            addCriterion("TRACE__MSG not between", value1, value2, "traceMsg");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table T_DEF_USER_TRACE
     *
     * @mbggenerated do_not_delete_during_merge Wed May 25 13:53:35 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table T_DEF_USER_TRACE
     *
     * @mbggenerated Wed May 25 13:53:35 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}