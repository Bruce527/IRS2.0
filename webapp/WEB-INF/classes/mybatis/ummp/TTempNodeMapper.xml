<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sinosoft.ummp.domain.mapper.TTempNodeMapper" >
  <resultMap id="BaseResultMap" type="com.sinosoft.ummp.domain.model.TTempNode" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 21 11:07:32 CST 2016.
    -->
    <id column="ID" property="id" jdbcType="DECIMAL" />
    <result column="FID" property="fid" jdbcType="DECIMAL" />
    <result column="NODE_ID" property="nodeId" jdbcType="VARCHAR" />
    <result column="NODE_CODE" property="nodeCode" jdbcType="VARCHAR" />
    <result column="NODE_NAME" property="nodeName" jdbcType="VARCHAR" />
    <result column="SON_NODE_TYPE" property="sonNodeType" jdbcType="VARCHAR" />
    <result column="SON_NODE_CONTENT" property="sonNodeContent" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 21 11:07:32 CST 2016.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 21 11:07:32 CST 2016.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 21 11:07:32 CST 2016.
    -->
    ID, FID, NODE_ID, NODE_CODE, NODE_NAME, SON_NODE_TYPE, SON_NODE_CONTENT
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sinosoft.ummp.domain.model.TTempNodeExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 21 11:07:32 CST 2016.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from T_TEMP_NODE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 21 11:07:32 CST 2016.
    -->
    select 
    <include refid="Base_Column_List" />
    from T_TEMP_NODE
    where ID = #{id,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 21 11:07:32 CST 2016.
    -->
    delete from T_TEMP_NODE
    where ID = #{id,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="com.sinosoft.ummp.domain.model.TTempNodeExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 21 11:07:32 CST 2016.
    -->
    delete from T_TEMP_NODE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sinosoft.ummp.domain.model.TTempNode" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 21 11:07:32 CST 2016.
    -->
    insert into T_TEMP_NODE (ID, FID, NODE_ID, 
      NODE_CODE, NODE_NAME, SON_NODE_TYPE, 
      SON_NODE_CONTENT)
    values (#{id,jdbcType=DECIMAL}, #{fid,jdbcType=DECIMAL}, #{nodeId,jdbcType=VARCHAR}, 
      #{nodeCode,jdbcType=VARCHAR}, #{nodeName,jdbcType=VARCHAR}, #{sonNodeType,jdbcType=VARCHAR}, 
      #{sonNodeContent,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sinosoft.ummp.domain.model.TTempNode" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 21 11:07:32 CST 2016.
    -->
    insert into T_TEMP_NODE
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="fid != null" >
        FID,
      </if>
      <if test="nodeId != null" >
        NODE_ID,
      </if>
      <if test="nodeCode != null" >
        NODE_CODE,
      </if>
      <if test="nodeName != null" >
        NODE_NAME,
      </if>
      <if test="sonNodeType != null" >
        SON_NODE_TYPE,
      </if>
      <if test="sonNodeContent != null" >
        SON_NODE_CONTENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=DECIMAL},
      </if>
      <if test="fid != null" >
        #{fid,jdbcType=DECIMAL},
      </if>
      <if test="nodeId != null" >
        #{nodeId,jdbcType=VARCHAR},
      </if>
      <if test="nodeCode != null" >
        #{nodeCode,jdbcType=VARCHAR},
      </if>
      <if test="nodeName != null" >
        #{nodeName,jdbcType=VARCHAR},
      </if>
      <if test="sonNodeType != null" >
        #{sonNodeType,jdbcType=VARCHAR},
      </if>
      <if test="sonNodeContent != null" >
        #{sonNodeContent,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sinosoft.ummp.domain.model.TTempNodeExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 21 11:07:32 CST 2016.
    -->
    select count(*) from T_TEMP_NODE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 21 11:07:32 CST 2016.
    -->
    update T_TEMP_NODE
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=DECIMAL},
      </if>
      <if test="record.fid != null" >
        FID = #{record.fid,jdbcType=DECIMAL},
      </if>
      <if test="record.nodeId != null" >
        NODE_ID = #{record.nodeId,jdbcType=VARCHAR},
      </if>
      <if test="record.nodeCode != null" >
        NODE_CODE = #{record.nodeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.nodeName != null" >
        NODE_NAME = #{record.nodeName,jdbcType=VARCHAR},
      </if>
      <if test="record.sonNodeType != null" >
        SON_NODE_TYPE = #{record.sonNodeType,jdbcType=VARCHAR},
      </if>
      <if test="record.sonNodeContent != null" >
        SON_NODE_CONTENT = #{record.sonNodeContent,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 21 11:07:32 CST 2016.
    -->
    update T_TEMP_NODE
    set ID = #{record.id,jdbcType=DECIMAL},
      FID = #{record.fid,jdbcType=DECIMAL},
      NODE_ID = #{record.nodeId,jdbcType=VARCHAR},
      NODE_CODE = #{record.nodeCode,jdbcType=VARCHAR},
      NODE_NAME = #{record.nodeName,jdbcType=VARCHAR},
      SON_NODE_TYPE = #{record.sonNodeType,jdbcType=VARCHAR},
      SON_NODE_CONTENT = #{record.sonNodeContent,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sinosoft.ummp.domain.model.TTempNode" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 21 11:07:32 CST 2016.
    -->
    update T_TEMP_NODE
    <set >
      <if test="fid != null" >
        FID = #{fid,jdbcType=DECIMAL},
      </if>
      <if test="nodeId != null" >
        NODE_ID = #{nodeId,jdbcType=VARCHAR},
      </if>
      <if test="nodeCode != null" >
        NODE_CODE = #{nodeCode,jdbcType=VARCHAR},
      </if>
      <if test="nodeName != null" >
        NODE_NAME = #{nodeName,jdbcType=VARCHAR},
      </if>
      <if test="sonNodeType != null" >
        SON_NODE_TYPE = #{sonNodeType,jdbcType=VARCHAR},
      </if>
      <if test="sonNodeContent != null" >
        SON_NODE_CONTENT = #{sonNodeContent,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sinosoft.ummp.domain.model.TTempNode" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 21 11:07:32 CST 2016.
    -->
    update T_TEMP_NODE
    set FID = #{fid,jdbcType=DECIMAL},
      NODE_ID = #{nodeId,jdbcType=VARCHAR},
      NODE_CODE = #{nodeCode,jdbcType=VARCHAR},
      NODE_NAME = #{nodeName,jdbcType=VARCHAR},
      SON_NODE_TYPE = #{sonNodeType,jdbcType=VARCHAR},
      SON_NODE_CONTENT = #{sonNodeContent,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <!-- Add for Sepc By Darker.Wang -->
  <select id="selectNodeSqlInfo" resultType = "java.util.Map" parameterType="java.lang.Integer">
   select son_node_type as type,son_node_content as content from T_TEMP_NODE
   where ID = #{id,jdbcType=DECIMAL}
  </select>
  <!-- 根据父类ID递归删除 -->
  <delete id="deleteByIdRecurs" parameterType="java.lang.Integer" >
    DELETE FROM T_TEMP_NODE WHERE ID IN (
		SELECT ID FROM T_TEMP_NODE START WITH ID = #{id,jdbcType=DECIMAL} CONNECT BY PRIOR ID = fid
		)
  </delete>
  <select id="selecteByIdRecurs" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
   SELECT * FROM T_TEMP_NODE START WITH ID = #{id,jdbcType=DECIMAL} CONNECT BY PRIOR ID = fid ORDER BY ID
  </select>
  <select id="selectTempNodeByFid" resultMap="BaseResultMap" parameterType="java.lang.Integer">
  SELECT * FROM T_TEMP_NODE WHERE FID = #{fid,jdbcType=DECIMAL} AND FID IS NOT NULL ORDER BY ID
  </select>
  <delete id="deleteByNodeIdRecurs" parameterType="java.math.BigDecimal" >
    DELETE FROM T_TEMP_NODE WHERE ID IN (
		SELECT ID FROM T_TEMP_NODE START WITH NODE_ID = #{nodeId,jdbcType=DECIMAL} CONNECT BY PRIOR ID = FID
	)
  </delete>
  <select id="selectTempRootNode" resultMap="BaseResultMap">
  	SELECT ID,
       FID,
       NODE_ID,
       NODE_CODE,
       (CASE
         WHEN NODE_ID IS NULL THEN
          '(新建)'
         ELSE
          (SELECT '('||BM.BUSS_NAME||')'
             FROM T_DEF_BUSS_XENGIN BI, T_DEF_BUSS_MODEL BM
            WHERE BM.BUSS_ID = BI.BUSS_ID
              AND BI.NODE_ID = T.NODE_ID)
       END) AS NODE_NAME,
       SON_NODE_TYPE,
       SON_NODE_CONTENT
  FROM T_TEMP_NODE T
 WHERE FID IS NULL
  </select>
  <select id="selectTempByFId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
  	SELECT * FROM T_TEMP_NODE WHERE FID = #{fid,jdbcType=DECIMAL}
  </select>
</mapper>